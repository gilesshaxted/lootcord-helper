const { SlashCommandBuilder, ActionRowBuilder, StringSelectMenuBuilder, ButtonBuilder, ButtonStyle, ChannelType, MessageFlags } = require('discord.js');
// Import pagination utility to access constants and functions needed for the initial reply
const { createChannelPaginationMessage } = require('../utils/pagination'); 

// Define how many channels to show per page in the dropdown
// NOTE: CHANNELS_PER_PAGE is now imported from utils/pagination for consistency if needed, 
// but we only need to call the function here.

module.exports = {
    // Defines the slash command's name and description.
    data: new SlashCommandBuilder()
        .setName('channel-set')
        .setDescription('Opens a paginated menu to select multiple channels from a specific category.'),

    async execute(interaction, db, client) {
        await interaction.deferReply({ flags: MessageFlags.Ephemeral });

        const guild = interaction.guild;

        if (!guild) {
            return await interaction.editReply({ content: 'This command can only be used in a guild.', flags: MessageFlags.Ephemeral });
        }
        
        // Use the centralized utility function to create the initial (Page 0) message components
        const { content, components } = await createChannelPaginationMessage(guild, 0);

        // Handle case where no channels are found (content will have been updated by utility)
        if (components.length === 0) {
            return await interaction.editReply({
                content: content,
                flags: MessageFlags.Ephemeral
            });
        }
        
        // Send the message with the dropdown and buttons.
        await interaction.editReply({
            content: content,
            components: components, // Components are the two ActionRows generated by the utility
            flags: MessageFlags.Ephemeral
        });
    },
};
